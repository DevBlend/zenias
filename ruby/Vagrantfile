# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
    # Start with base vagrant box. This one is only 271 MB in size.
    config.vm.box = "minimal/trusty64"

    #if Vagrant.has_plugin?("vagrant-cachier")
    # Configure cached packages to be shared between instances of the same base box.
    # More info on http://fgrehm.viewdocs.io/vagrant-cachier/usage

    #config.cache.scope = :box
    #config.cache.auto_detect = true

    # OPTIONAL: If you are using VirtualBox, you might want to use that to enable
    # NFS for shared folders. This is also very useful for vagrant-libvirt if you
    # want bi-directional sync
    #config.cache.synced_folder_opts = {
    #  type: :nfs,
      # The nolock option can be useful for an NFSv3 client that wants to avoid the
      # NLM sideband protocol. Without this option, apt-get might hang if it tries
      # to lock files needed for /var/cache/* operations. All of this can be avoided
      # by using NFSv4 everywhere. Please note that the tcp option is not the default.
    #  mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
    #}
    # For more information please check http://docs.vagrantup.com/v2/synced-folders/basic_usage.html
  #end

    # Configue the virtual machines resources if you want
    config.vm.provider :virtualbox do |vb|
      # vb.cpus = 4 # 4 cpus
      vb.memory = 768 # minimum memory requirement
    end

    # Make it so that network access from the vagrant guest is able to
    # use SSH private keys that are present on the host without copying
    # them into the VM.
    config.ssh.forward_agent = true

    # Create forwarding ports for client-guest machine access via localhost.
    # auto_correct allows the simultaneous spin up of multiple VM locally.
    config.vm.network :forwarded_port, guest: 3000, host: 3000, auto_correct: true

    # Add the tty fix as mentioned in issue 1673 on vagrant repo
    # To avoid 'stdin is not a tty' messages
    # vagrant provisioning in shell runs bash -l
    config.vm.provision "fix-no-tty", type: "shell" do |s|
        s.privileged = false
        s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
    end

    # Provision the virtual machine.
    config.vm.provision "first", type: "shell", privileged: false, :path => "provision.sh"
    config.vm.provision "second", type: "shell", privileged: false, :path => "provision2.sh"
end
